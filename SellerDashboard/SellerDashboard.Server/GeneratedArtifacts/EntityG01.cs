

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class InventoryItem : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the InventoryItem entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public InventoryItem()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public InventoryItem(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.InventoryItem> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.InventoryItem.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InventoryItem_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InventoryItem_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ArrivedDate
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ArrivedDate);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ArrivedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ArrivedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ArrivedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ArrivedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BodyStyle
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.BodyStyle);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.BodyStyle, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BodyStyle_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BodyStyle_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BodyStyle_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Brand
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Brand);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Brand, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Brand_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Brand_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Brand_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BuyerEmail
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.BuyerEmail);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.BuyerEmail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerEmail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerEmail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerEmail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactEmail
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactEmail);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactEmail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactEmail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactEmail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactEmail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactName
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactName);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactPhone
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactPhone);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactPhone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Engine
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Engine);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Engine, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engine_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engine_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engine_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExtColor
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ExtColor);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ExtColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ID);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IntColor
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.IntColor);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.IntColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IntColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IntColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IntColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MaxPower
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.MaxPower);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.MaxPower, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxPower_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxPower_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxPower_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Model
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Model);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Model, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Model_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Model_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Model_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Price
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Price);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Price, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Price_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Price_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Price_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Removed
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Removed);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Removed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Removed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Removed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Transmission
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Transmission);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Transmission, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Transmission_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Transmission_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Transmission_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Year
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Year);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Year, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Year_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Year_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Year_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsValid
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.IsValid);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsValid_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsValid_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsValid_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StockNo
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.StockNo);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.StockNo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockNo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockNo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockNo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ContosoMotorsPicture ContosoMotorsPicture
        {
            get
            {
                return global::LightSwitchApplication.InventoryItem.DetailsClass.GetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContosoMotorsPicture);
            }
            set
            {
                global::LightSwitchApplication.InventoryItem.DetailsClass.SetValue(this, global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContosoMotorsPicture, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContosoMotorsPicture_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContosoMotorsPicture_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContosoMotorsPicture_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.InventoryItem,
                global::LightSwitchApplication.InventoryItem.DetailsClass,
                global::LightSwitchApplication.InventoryItem.DetailsClass.IImplementation,
                global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ArrivedDate;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass>.Entry
                __InventoryItemEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass>.Entry(
                    global::LightSwitchApplication.InventoryItem.DetailsClass.__InventoryItem_CreateNew,
                    global::LightSwitchApplication.InventoryItem.DetailsClass.__InventoryItem_Created,
                    global::LightSwitchApplication.InventoryItem.DetailsClass.__InventoryItem_AllowSaveWithErrors);
            private static global::LightSwitchApplication.InventoryItem __InventoryItem_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.InventoryItem> es)
            {
                return new global::LightSwitchApplication.InventoryItem(es);
            }
            private static void __InventoryItem_Created(global::LightSwitchApplication.InventoryItem e)
            {
                e.InventoryItem_Created();
            }
            private static bool __InventoryItem_AllowSaveWithErrors(global::LightSwitchApplication.InventoryItem e)
            {
                bool result = false;
                e.InventoryItem_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::System.DateTime> ArrivedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ArrivedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> BodyStyle
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.BodyStyle) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> Brand
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Brand) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> BuyerEmail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.BuyerEmail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> ContactEmail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactEmail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> ContactName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> ContactPhone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContactPhone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> Engine
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Engine) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> ExtColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ExtColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> IntColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.IntColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int> MaxPower
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.MaxPower) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> Model
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Model) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, decimal> Price
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Price) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool> Removed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Removed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> Transmission
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Transmission) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int> Year
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.Year) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool> IsValid
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.IsValid) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string> StockNo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.StockNo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::LightSwitchApplication.ContosoMotorsPicture> ContosoMotorsPicture
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties.ContosoMotorsPicture) as global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::LightSwitchApplication.ContosoMotorsPicture>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.DateTime ArrivedDate { get; set; }
                new string BodyStyle { get; set; }
                new string Brand { get; set; }
                new string BuyerEmail { get; set; }
                new string ContactEmail { get; set; }
                new string ContactName { get; set; }
                new string ContactPhone { get; set; }
                new string Engine { get; set; }
                new string ExtColor { get; set; }
                new int ID { get; set; }
                new string IntColor { get; set; }
                new int MaxPower { get; set; }
                new string Model { get; set; }
                new decimal Price { get; set; }
                new bool Removed { get; }
                new string Status { get; set; }
                new string Transmission { get; set; }
                new int Year { get; set; }
                new bool IsValid { get; }
                new string StockNo { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::System.DateTime>.Entry
                    ArrivedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::System.DateTime>.Entry(
                        "ArrivedDate",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ArrivedDate_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ArrivedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ArrivedDate_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ArrivedDate_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ArrivedDate_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ArrivedDate_OnValueChanged);
                private static void _ArrivedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ArrivedDate, sf);
                }
                private static bool _ArrivedDate_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.ArrivedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ArrivedDate_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ArrivedDate_Validate(r);
                }
                private static global::System.DateTime _ArrivedDate_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ArrivedDate;
                }
                private static void _ArrivedDate_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ArrivedDate = global::LightSwitchApplication.InventoryItem.DetailsClass.TruncateDate(v);
                }
                private static void _ArrivedDate_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.ArrivedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    BodyStyle = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "BodyStyle",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BodyStyle_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BodyStyle_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BodyStyle_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BodyStyle_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BodyStyle_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BodyStyle_OnValueChanged);
                private static void _BodyStyle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._BodyStyle, sf);
                }
                private static bool _BodyStyle_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.BodyStyle_IsReadOnly(ref result);
                    return result;
                }
                private static void _BodyStyle_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BodyStyle_Validate(r);
                }
                private static string _BodyStyle_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.BodyStyle;
                }
                private static void _BodyStyle_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BodyStyle = v;
                }
                private static void _BodyStyle_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.BodyStyle_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    Brand = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "Brand",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Brand_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Brand_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Brand_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Brand_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Brand_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Brand_OnValueChanged);
                private static void _Brand_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Brand, sf);
                }
                private static bool _Brand_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.Brand_IsReadOnly(ref result);
                    return result;
                }
                private static void _Brand_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Brand_Validate(r);
                }
                private static string _Brand_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Brand;
                }
                private static void _Brand_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Brand = v;
                }
                private static void _Brand_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.Brand_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    BuyerEmail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "BuyerEmail",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BuyerEmail_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BuyerEmail_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BuyerEmail_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BuyerEmail_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BuyerEmail_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._BuyerEmail_OnValueChanged);
                private static void _BuyerEmail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerEmail, sf);
                }
                private static bool _BuyerEmail_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.BuyerEmail_IsReadOnly(ref result);
                    return result;
                }
                private static void _BuyerEmail_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BuyerEmail_Validate(r);
                }
                private static string _BuyerEmail_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerEmail;
                }
                private static void _BuyerEmail_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BuyerEmail = v;
                }
                private static void _BuyerEmail_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.BuyerEmail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    ContactEmail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "ContactEmail",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactEmail_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactEmail_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactEmail_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactEmail_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactEmail_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactEmail_OnValueChanged);
                private static void _ContactEmail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactEmail, sf);
                }
                private static bool _ContactEmail_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.ContactEmail_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactEmail_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactEmail_Validate(r);
                }
                private static string _ContactEmail_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactEmail;
                }
                private static void _ContactEmail_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactEmail = v;
                }
                private static void _ContactEmail_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.ContactEmail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    ContactName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "ContactName",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactName_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactName_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactName_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactName_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactName_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactName_OnValueChanged);
                private static void _ContactName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactName, sf);
                }
                private static bool _ContactName_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.ContactName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactName_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactName_Validate(r);
                }
                private static string _ContactName_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactName;
                }
                private static void _ContactName_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactName = v;
                }
                private static void _ContactName_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.ContactName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    ContactPhone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "ContactPhone",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactPhone_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactPhone_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactPhone_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactPhone_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactPhone_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContactPhone_OnValueChanged);
                private static void _ContactPhone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactPhone, sf);
                }
                private static bool _ContactPhone_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.ContactPhone_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactPhone_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactPhone_Validate(r);
                }
                private static string _ContactPhone_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactPhone;
                }
                private static void _ContactPhone_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactPhone = v;
                }
                private static void _ContactPhone_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.ContactPhone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    Engine = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "Engine",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Engine_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Engine_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Engine_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Engine_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Engine_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Engine_OnValueChanged);
                private static void _Engine_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Engine, sf);
                }
                private static bool _Engine_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.Engine_IsReadOnly(ref result);
                    return result;
                }
                private static void _Engine_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Engine_Validate(r);
                }
                private static string _Engine_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Engine;
                }
                private static void _Engine_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Engine = v;
                }
                private static void _Engine_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.Engine_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    ExtColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "ExtColor",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ExtColor_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ExtColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ExtColor_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ExtColor_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ExtColor_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ExtColor_OnValueChanged);
                private static void _ExtColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ExtColor, sf);
                }
                private static bool _ExtColor_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.ExtColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExtColor_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExtColor_Validate(r);
                }
                private static string _ExtColor_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ExtColor;
                }
                private static void _ExtColor_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ExtColor = v;
                }
                private static void _ExtColor_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.ExtColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ID_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ID = v;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    IntColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "IntColor",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IntColor_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IntColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IntColor_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IntColor_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IntColor_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IntColor_OnValueChanged);
                private static void _IntColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._IntColor, sf);
                }
                private static bool _IntColor_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.IntColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _IntColor_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IntColor_Validate(r);
                }
                private static string _IntColor_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.IntColor;
                }
                private static void _IntColor_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IntColor = v;
                }
                private static void _IntColor_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.IntColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Entry
                    MaxPower = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Entry(
                        "MaxPower",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._MaxPower_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._MaxPower_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._MaxPower_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._MaxPower_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._MaxPower_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._MaxPower_OnValueChanged);
                private static void _MaxPower_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._MaxPower, sf);
                }
                private static bool _MaxPower_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.MaxPower_IsReadOnly(ref result);
                    return result;
                }
                private static void _MaxPower_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MaxPower_Validate(r);
                }
                private static int _MaxPower_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.MaxPower;
                }
                private static void _MaxPower_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MaxPower = v;
                }
                private static void _MaxPower_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.MaxPower_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    Model = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "Model",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Model_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Model_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Model_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Model_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Model_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Model_OnValueChanged);
                private static void _Model_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Model, sf);
                }
                private static bool _Model_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.Model_IsReadOnly(ref result);
                    return result;
                }
                private static void _Model_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Model_Validate(r);
                }
                private static string _Model_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Model;
                }
                private static void _Model_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Model = v;
                }
                private static void _Model_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.Model_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, decimal>.Entry
                    Price = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, decimal>.Entry(
                        "Price",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Price_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Price_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Price_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Price_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Price_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Price_OnValueChanged);
                private static void _Price_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Price, sf);
                }
                private static bool _Price_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.Price_IsReadOnly(ref result);
                    return result;
                }
                private static void _Price_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Price_Validate(r);
                }
                private static decimal _Price_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Price;
                }
                private static void _Price_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.Price = v;
                }
                private static void _Price_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.Price_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>.Entry
                    Removed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>.Entry(
                        "Removed",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Removed_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Removed_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Removed_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Removed_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Removed_OnValueChanged);
                private static void _Removed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Removed, sf);
                }
                private static bool _Removed_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.Removed_IsReadOnly(ref result);
                    return result;
                }
                private static void _Removed_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Removed_Validate(r);
                }
                private static bool _Removed_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Removed;
                }
                private static void _Removed_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.Removed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    Transmission = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "Transmission",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Transmission_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Transmission_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Transmission_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Transmission_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Transmission_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Transmission_OnValueChanged);
                private static void _Transmission_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Transmission, sf);
                }
                private static bool _Transmission_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.Transmission_IsReadOnly(ref result);
                    return result;
                }
                private static void _Transmission_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Transmission_Validate(r);
                }
                private static string _Transmission_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Transmission;
                }
                private static void _Transmission_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Transmission = v;
                }
                private static void _Transmission_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.Transmission_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Entry
                    Year = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Entry(
                        "Year",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Year_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Year_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Year_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Year_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Year_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._Year_OnValueChanged);
                private static void _Year_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Year, sf);
                }
                private static bool _Year_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.Year_IsReadOnly(ref result);
                    return result;
                }
                private static void _Year_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Year_Validate(r);
                }
                private static int _Year_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Year;
                }
                private static void _Year_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Year = v;
                }
                private static void _Year_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.Year_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>.Entry
                    IsValid = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>.Entry(
                        "IsValid",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IsValid_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IsValid_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IsValid_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IsValid_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._IsValid_OnValueChanged);
                private static void _IsValid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._IsValid, sf);
                }
                private static bool _IsValid_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.IsValid_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsValid_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsValid_Validate(r);
                }
                private static bool _IsValid_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.IsValid;
                }
                private static void _IsValid_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.IsValid_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry
                    StockNo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Entry(
                        "StockNo",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._StockNo_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._StockNo_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._StockNo_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._StockNo_GetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._StockNo_SetImplementationValue,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._StockNo_OnValueChanged);
                private static void _StockNo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._StockNo, sf);
                }
                private static bool _StockNo_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.StockNo_IsReadOnly(ref result);
                    return result;
                }
                private static void _StockNo_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StockNo_Validate(r);
                }
                private static string _StockNo_GetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d)
                {
                    return d.ImplementationEntity.StockNo;
                }
                private static void _StockNo_SetImplementationValue(global::LightSwitchApplication.InventoryItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StockNo = v;
                }
                private static void _StockNo_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.StockNo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::LightSwitchApplication.ContosoMotorsPicture>.Entry
                    ContosoMotorsPicture = new global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::LightSwitchApplication.ContosoMotorsPicture>.Entry(
                        "ContosoMotorsPicture",
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContosoMotorsPicture_Stub,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContosoMotorsPicture_ComputeIsReadOnly,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContosoMotorsPicture_Validate,
                        global::LightSwitchApplication.InventoryItem.DetailsClass.PropertySetProperties._ContosoMotorsPicture_OnValueChanged);
                private static void _ContosoMotorsPicture_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.InventoryItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::LightSwitchApplication.ContosoMotorsPicture>.Data> c, global::LightSwitchApplication.InventoryItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ContosoMotorsPicture, sf);
                }
                private static bool _ContosoMotorsPicture_ComputeIsReadOnly(global::LightSwitchApplication.InventoryItem e)
                {
                    bool result = false;
                    e.ContosoMotorsPicture_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContosoMotorsPicture_Validate(global::LightSwitchApplication.InventoryItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContosoMotorsPicture_Validate(r);
                }
                private static void _ContosoMotorsPicture_OnValueChanged(global::LightSwitchApplication.InventoryItem e)
                {
                    e.ContosoMotorsPicture_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::System.DateTime>.Data _ArrivedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _BodyStyle;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _Brand;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _BuyerEmail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _ContactEmail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _ContactName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _ContactPhone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _Engine;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _ExtColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _IntColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Data _MaxPower;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _Model;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, decimal>.Data _Price;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>.Data _Removed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _Transmission;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, int>.Data _Year;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, bool>.Data _IsValid;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, string>.Data _StockNo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.InventoryItem, global::LightSwitchApplication.InventoryItem.DetailsClass, global::LightSwitchApplication.ContosoMotorsPicture>.Data _ContosoMotorsPicture;
            
        }
    
        #endregion
    }
    
    #endregion
}
